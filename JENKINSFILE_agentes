pipeline {
    agent {label 'Windows'}

    stages {
        stage ('Ejecucion nodo principal') {
            steps { 
                pwsh 'echo $env:COMPUTERNAME'
                echo "Ruta del workspace: ${env.WORKSPACE}"
                git url: 'https://github.com/Felipe-Hernandez-dev/helloworld', branch: 'develop'
                pwsh 'Get-ChildItem -Recurse -Path $env:WORKSPACE'
                stash includes: '**/*', name: 'repo-clonado'
                pwsh 'Copy-Item -Recurse -Path "C:\\Users\\Devops\\Documents\\WorkSpace\\Wiremook" -Destination $env:WORKSPACE -Force'
                stash includes: 'Wiremook/**', name: 'wiremock'
            }
        }

        stage ('Nombres de los dos Agentes Linux') {
            parallel {
                stage ('Agent1 Info') {
                    agent { label 'Agent1' }
                    steps {                        
                        sh '''
                            set -e
                            echo "Hostname: $(hostname), Usuario: $(whoami)"
                        '''
                        unstash 'repo-clonado'
                    }
                }
                stage ('Agent2 Info') {
                    agent { label 'Agent2' }
                    steps {                        
                        sh '''
                            set -e
                            echo "Hostname: $(hostname), Usuario: $(whoami)"
                        '''
                        unstash 'repo-clonado'
                    }
                }
            }
        }

        stage ('Unit Test en Agent1') {
            agent { label 'Agent1' }
            steps {
                sh '''
                    set -e
                    export PYTHONPATH="."
                    pytest --junitxml=result-rest.xml test/unit
                    echo "Hostname: $(hostname), Usuario: $(whoami)"
                '''
            }
        }

        stage ('Service Test en Agent1') {
            agent { label 'Agent1' }
            environment {
                JAVA_HOME = '/usr/lib/jvm/java-17-openjdk-amd64'
                PATH = "${env.JAVA_HOME}/bin:${env.PATH}"
            }
            steps {                
                unstash 'wiremock'
                sh '''
                    set -e
                    export FLASK_APP=app/api.py
                    export PYTHONPATH=.
                    flask run &
                    nohup java -jar Wiremook/wiremock-standalone-3.13.0.jar \
                        --port 9090 \
                        --verbose \
                        --root-dir test/wiremock > wiremock.log 2>&1 &
                    sleep 5
                    pytest --junitxml=result-rest-1.xml test/rest 
                    echo "Hostname: $(hostname), Usuario: $(whoami)"
                '''
                stash includes: 'result-rest-1.xml', name: 'result1'
            }
        }

        stage ('Resultados Agent1') {
            steps {
                unstash 'result1'
                junit 'result-rest-1.xml'
            }
        }

        stage ('Ejecuciones Paralelas en Agent2') {
            parallel {
                stage ('Unit Test') {
                    agent { label 'Agent2' }
                    steps {                        
                        sh '''
                            set -e
                            export PYTHONPATH="."
                            pytest --junitxml=result-rest.xml test/unit
                            echo "Hostname: $(hostname), Usuario: $(whoami)"
                        '''
                    }
                }

                stage ('Service Test') {
                    agent { label 'Agent2' }
                    environment {
                        JAVA_HOME = '/usr/lib/jvm/java-17-openjdk-amd64'
                        PATH = "${env.JAVA_HOME}/bin:${env.PATH}"
                    }
                    steps {
                        unstash 'wiremock'
                        sh '''
                            set -e
                            echo "Verificando el entorno Linux..."
                            export FLASK_APP=app/api.py
                            export PYTHONPATH=.
                            nohup flask run &
                            nohup java -jar Wiremook/wiremock-standalone-3.13.0.jar \
                                --port 9090 \
                                --verbose \
                                --root-dir test/wiremock > wiremock.log 2>&1 &
                            sleep 5                            
                            pytest --junitxml=result-rest-2.xml test/rest 
                            echo "Hostname: $(hostname), Usuario: $(whoami)"
                        '''
                        stash includes: 'result-rest-2.xml', name: 'result2'
                    }
                }
            }
        }

        stage ('Resultados Agent2') {
            steps {
                unstash 'result2'
                junit 'result-rest-2.xml'
            }
        }

        stage ('Limpieza Workspaces') {
            parallel {
                stage ('Limpiar Agent1') {
                    agent { label 'Agent1' }
                    steps {
                        cleanWs()
                        sh 'echo "Workspace limpio en Agent1 ($(hostname))"'
                    }
                }
                stage ('Limpiar Agent2') {
                    agent { label 'Agent2' }
                    steps {
                        cleanWs()
                        sh 'echo "Workspace limpio en Agent2 ($(hostname))"'
                    }
                }
            }
        }
    }
}